
import java.io.*;
import java.util.HashMap;

import java_cup.runtime.*;

public class CLexerTest {

/* usato solo per poter stampare la coppia <Nome Token, Attributo> */
	private static final Integer[] TOKEN_IDS = new Integer[] { 
   46,
   11,
   33,
   87,
   50,
   23,
   29,
   41,
   54,
   76,
   14,
   71,
   70,
   43,
   74,
   48,
   75,
   86,
   24,
   25,
   8,
   53,
   69,
   73,
   34,
   79,
   42,
   6,
   12,
   64,
   80,
   3,
   85,
   44,
   78,
   82,
   90,
   61,
   15,
   60,
   62,
   63,
   32,
   84,
   52,
   38,
   83,
   67,
   59,
   10,
   66,
   21,
   2,
   49,
   5,
   22,
   0,
   68,
   36,
   57,
   26,
   81,
   20,
   89,
   1,
   27,
   31,
   65,
   58,
   77,
   47,
   7,
   28,
   45,
   17,
   72,
   51,
   35,
   56,
   16,
   19,
   13,
   4,
   55,
   39,
   18,
   9,
   37,
   88,
   40,
   30

	 };

	private static final String[] TOKEN_NAMES = new String[] { 
  
  "SIGNED",
  "OCT_CONSTANT",
  "ANDEQ",
  "GT",
  "CONST",
  "NOTEQ",
  "PLUSEQ",
  "REGISTER",
  "ENUM",
  "RBRACK",
  "SIZEOF",
  "COMMA",
  "RBRACE",
  "SHORT_TYPE",
  "RPAREN",
  "FLOAT_TYPE",
  "LBRACK",
  "LT",
  "ANDAND",
  "OROR",
  "CHAR_CONSTANT",
  "STRUCT",
  "LBRACE",
  "LPAREN",
  "XOREQ",
  "NOT",
  "CHAR_TYPE",
  "ERROR",
  "HEX_CONSTANT",
  "GOTO",
  "COMP",
  "EQ",
  "MOD",
  "INT_TYPE",
  "ADRESS",
  "PLUS",
  "QUESTION",
  "WHILE",
  "PTR_OP",
  "SWITCH",
  "DO",
  "FOR",
  "RSHIFTEQ",
  "DIV",
  "VOID",
  "EXTERN",
  "MULT",
  "RETURN",
  "ELSE",
  "REAL_CONSTANT",
  "BREAK",
  "GTEQ",
  "DOT",
  "DOUBLE_TYPE",
  "NULL_LITERAL",
  "EQEQ",
  "EOF",
  "SEMICOLON",
  "TYPE_NAME",
  "DEFAULT",
  "MULTEQ",
  "MINUS",
  "LTEQ",
  "OR",
  "error",
  "DIVEQ",
  "LSHIFTEQ",
  "CONTINUE",
  "IF",
  "POINT_TYPE",
  "UNSIGNED",
  "ID",
  "MODEQ",
  "LONG_TYPE",
  "MINUSMINUS",
  "COLON",
  "VOLATILE",
  "OREQ",
  "CASE",
  "PLUSPLUS",
  "RSHIFT",
  "STRING",
  "AND",
  "ELLIPSIS",
  "STATIC",
  "LSHIFT",
  "INT_CONSTANT",
  "TYPEDEF",
  "XOR",
  "AUTO",
  "MINUSEQ"
 
        };

	public static void main(String[] args) {
		HashMap<Integer, String> tokenNames = new HashMap<Integer, String>();
		for (int i = 0; i < TOKEN_IDS.length; i++)
			tokenNames.put(TOKEN_IDS[i], TOKEN_NAMES[i]);

		Symbol sym;
		try {
			CLexer lexer = new CLexer(new FileReader(args[0]));

			for (sym = lexer.next_token(); sym.sym != 0; sym = lexer.next_token()) {
        /* stampa della coppia <Nome Token, Attributo> e posizione di linea e colonna */
      	System.out.println("<" + tokenNames.get(sym.sym) + (sym.value == null ? "" :"," + sym.value)
						+ ">  at line " + sym.left +", column " + sym.right);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
